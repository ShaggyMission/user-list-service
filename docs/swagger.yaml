
openapi: 3.0.0
info:
  title: User List API - Shaggy Mission
  version: 1.0.0
  description: >
    This API provides user listing functionality for the Shaggy Mission platform.  
    It allows retrieving paginated lists of registered users including volunteers, adopters, 
    veterinarians, and administrators.  
    **Pagination is handled automatically with configurable page size.**  
    The API returns user data along with pagination metadata for efficient data navigation.  
    Users are ordered by creation date (newest first) and passwords are excluded for security.

servers:
  - url: http://localhost:3005
    description: Development server

paths:
  /users/list:
    get:
      summary: Get paginated list of users
      description: >
        Retrieves a paginated list of all registered users in the Shaggy Mission platform.  
        Returns user information along with pagination metadata including current page,  
        total items, and total pages. Default page size is 10 users per page.  
        Users are automatically ordered by creation date (newest first).  
        Password fields are excluded from the response for security purposes.  
        Useful for administrative dashboards and user management interfaces.
      tags:
        - User Management
      parameters:
        - in: query
          name: page
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
          description: >
            Page number for pagination. Must be a positive integer.  
            If not provided, defaults to page 1.
          example: 1
      responses:
        '200':
          description: Users retrieved successfully with pagination
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: array
                    description: Array of user objects ordered by creation date (newest first)
                    items:
                      $ref: '#/components/schemas/User'
                  pagination:
                    $ref: '#/components/schemas/PaginationInfo'
              examples:
                successful_response:
                  summary: Successful user list retrieval
                  value:
                    users:
                      - id: "mV-Wcd5G7sgh"
                        firstName: "Lisseth"
                        lastName: "Pacheco"
                        email: "lis.18905@hotmail.com"
                        phone: "0995488400"
                        createdAt: "2025-06-04T04:25:03.000Z"
                        updatedAt: "2025-06-04T04:25:03.000Z"
                      - id: "nX-Abc8H9def"
                        firstName: "Carlos"
                        lastName: "Rodríguez"
                        email: "carlos.rodriguez@shaggymission.com"
                        phone: "0987654321"
                        createdAt: "2025-06-03T15:30:15.000Z"
                        updatedAt: "2025-06-03T15:30:15.000Z"
                    pagination:
                      currentPage: 1
                      pageSize: 10
                      totalItems: 25
                      totalPages: 3
                empty_response:
                  summary: Empty user list
                  value:
                    users: []
                    pagination:
                      currentPage: 1
                      pageSize: 10
                      totalItems: 0
                      totalPages: 0
                large_page_response:
                  summary: Response for page beyond available data
                  value:
                    users: []
                    pagination:
                      currentPage: 5
                      pageSize: 10
                      totalItems: 25
                      totalPages: 3
        '400':
          description: Bad Request – Invalid page parameter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_page:
                  summary: Invalid page parameter
                  value:
                    error: "Page must be a positive integer"
                negative_page:
                  summary: Negative page number
                  value:
                    error: "Page number must be greater than 0"
        '500':
          description: Internal Server Error – Database or server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                server_error:
                  summary: Internal server error
                  value:
                    error: "Internal server error"
                database_error:
                  summary: Database connection error
                  value:
                    error: "Database connection failed"

  /users/listUsers-docs:
    get:
      summary: API Documentation
      description: >
        Interactive Swagger UI documentation for the User List API.  
        Provides a complete specification and testing interface for all available endpoints.
      tags:
        - Documentation
      responses:
        '200':
          description: Swagger UI documentation page
          content:
            text/html:
              schema:
                type: string
                description: HTML page with interactive API documentation

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user (alphanumeric string)
          example: "mV-Wcd5G7sgh"
        firstName:
          type: string
          description: User's first name
          example: "Lisseth"
        lastName:
          type: string
          description: User's last name
          example: "Pacheco"
        email:
          type: string
          format: email
          description: User's email address
          example: "lis.18905@hotmail.com"
        phone:
          type: string
          description: User's phone number (Ecuadorian format)
          example: "0995488400"
        createdAt:
          type: string
          format: date-time
          description: User registration timestamp (ISO 8601 format)
          example: "2025-06-04T04:25:03.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Last profile update timestamp (ISO 8601 format)
          example: "2025-06-04T04:25:03.000Z"
      required:
        - id
        - firstName
        - lastName
        - email
        - phone
        - createdAt
        - updatedAt
    
    PaginationInfo:
      type: object
      properties:
        currentPage:
          type: integer
          description: Current page number
          example: 1
          minimum: 1
        pageSize:
          type: integer
          description: Number of items per page (fixed at 10)
          example: 10
          enum: [10]
        totalItems:
          type: integer
          description: Total number of users in the database
          example: 25
          minimum: 0
        totalPages:
          type: integer
          description: Total number of pages available
          example: 3
          minimum: 0
      required:
        - currentPage
        - pageSize
        - totalItems
        - totalPages
    
    UserListResponse:
      type: object
      properties:
        users:
          type: array
          description: Array of user objects ordered by creation date (DESC)
          items:
            $ref: '#/components/schemas/User'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
      required:
        - users
        - pagination
    
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Error message describing the issue
          example: "Internal server error"
      required:
        - error

  examples:
    FirstPageRequest:
      summary: Request for first page
      description: Standard request for the first page of users
      value:
        page: 1
    
    SpecificPageRequest:
      summary: Request for specific page
      description: Request for a specific page number
      value:
        page: 3
    
    SuccessfulUserList:
      summary: Successful user list with real data format
      description: Example response matching actual API response format
      value:
        users:
          - id: "mV-Wcd5G7sgh"
            firstName: "Lisseth"
            lastName: "Pacheco"
            email: "lis.18905@hotmail.com"
            phone: "0995488400"
            createdAt: "2025-06-04T04:25:03.000Z"
            updatedAt: "2025-06-04T04:25:03.000Z"
          - id: "nX-Abc8H9def"
            firstName: "María"
            lastName: "García"
            email: "maria.garcia@gmail.com"
            phone: "0987654321"
            createdAt: "2025-06-03T15:30:15.000Z"
            updatedAt: "2025-06-03T15:30:15.000Z"
        pagination:
          currentPage: 1
          pageSize: 10
          totalItems: 25
          totalPages: 3
    
    EmptyUserList:
      summary: Empty user list response
      description: Response when no users exist or page is beyond available data
      value:
        users: []
        pagination:
          currentPage: 1
          pageSize: 10
          totalItems: 0
          totalPages: 0

tags:
  - name: User Management
    description: >
      Operations related to user management and listing functionality.  
      Provides endpoints for retrieving user information with pagination support.  
      Users are automatically ordered by creation date (newest first).
  - name: Documentation
    description: >
      API documentation and interactive testing interface.  
      Access Swagger UI for complete API specification.

externalDocs:
  description: Find more info about Shaggy Mission
  url: https://shaggymission.com